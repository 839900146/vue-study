{"version":3,"sources":["webpack:///./src/views/sortTest.vue?d1b3","webpack:///./src/views/sortTest.vue?4431","webpack:///src/views/sortTest.vue","webpack:///./src/views/sortTest.vue?8123","webpack:///./src/views/sortTest.vue"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","component"],"mappings":"gHAAA,yBAA6gB,EAAG,G,yCCAhhB,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACR,EAAIS,GAAG,cCOnL,G,UAAA,CACE,KAAF,WACE,KAFF,WAGI,MAAJ,CACM,UAAN,KAGE,QAAF,CACI,aADJ,SACA,GAEM,IADA,IAAN,KACA,YACQ,EAAR,oCAEM,OAAN,GAEI,KARJ,SAQA,OAEM,IAAN,OACM,EAAN,QACM,EAAN,MAEI,SAdJ,WAcM,IAAN,OACA,aAEQ,IADA,IAAR,8BACA,sBACU,IAAV,4BACA,WACc,EAAd,YAIQ,QAAR,qBAEA,aACQ,IAGR,EAHA,gCACQ,EAAR,aACQ,EAAR,SAEQ,IAAR,6BACU,GAAV,EACU,IAAV,gBACA,cACc,GAAd,EACc,EAAd,eAGU,IAAV,EACY,MAGJ,QAAR,uBAEA,aAGQ,IAFA,IAAR,8BAEA,yBAEU,IADA,IAAV,IACA,wBACA,cACc,EAAd,KAGU,EAAV,YAEQ,QAAR,qBAEA,aAEQ,IADA,IAAR,8BACA,sBACU,IAAV,oBACY,GAAZ,YACc,IAAd,OACc,EAAd,YACc,EAAd,gBACc,MACd,UACc,IAAd,OACc,EAAd,YACc,EAAd,eAIQ,QAAR,qBAEA,eAiBM,IAEA,IAEA,IAEA,IAEA,MAGJ,SAAF,GACE,QAAF,WACI,KAAJ,cC1HkV,I,wBCQ9UC,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAAG,E","file":"js/chunk-181235c5.d19b3bd0.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sortTest.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sortTest.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"sortTest\"},[_c('div',{staticClass:\"test\"},[_vm._v(\"我是测试\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <!--排序测试-->\r\n    <div class=\"sortTest\">\r\n        <div class=\"test\">我是测试</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"sortTest\",\r\n        data() {\r\n            return {\r\n                randomLen:10\r\n            }\r\n        },\r\n        methods: {\r\n            getRandomArr(len){\r\n                let arr = []\r\n                for(let i = 0 ;i < len ; i++){\r\n                    arr.push(Math.floor(Math.random() * 100))\r\n                }\r\n                return arr;\r\n            },\r\n            swap(arr,x,y){\r\n                //交换\r\n                const temp = arr[x]\r\n                arr[x] = arr[y]\r\n                arr[y] = temp\r\n            },\r\n            appStart(){\r\n                const bubbleSort = ()=>{\r\n                    const operateArr = this.getRandomArr(this.randomLen)\r\n                    for(let i = 0 ; i < this.randomLen ; i++){\r\n                        for(let j = i + 1 ;j < this.randomLen; j++){\r\n                            if(operateArr[i] < operateArr[j]){\r\n                                this.swap(operateArr,i,j)\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log(operateArr,'bubbleSort')\r\n                }\r\n                const bubbleSortV2 = ()=>{\r\n                    const operateArr = this.getRandomArr(this.randomLen - 2)\r\n                    operateArr.unshift(1000)\r\n                    operateArr.push(-1)\r\n                    let flag\r\n                    for(let i = this.randomLen - 1; i > 0; i--){\r\n                        flag = false\r\n                        for(let j = 0;j < i; j++){\r\n                            if(operateArr[j] < operateArr[j + 1]){\r\n                                flag = true\r\n                                this.swap(operateArr,j,j + 1)\r\n                            }\r\n                        }\r\n                        if(!flag){\r\n                            break;\r\n                        }\r\n                    }\r\n                    console.log(operateArr,'bubbleSortV2')\r\n                }\r\n                const selectSort = ()=> {\r\n                    const operateArr = this.getRandomArr(this.randomLen)\r\n                    // 每次找出最大的，把它放在最前面一位（大到小排序）\r\n                    for(let i = 0 ; i < this.randomLen - 1;i++){\r\n                        let maxDataIndex = i\r\n                        for(let j = i + 1; j < this.randomLen; j++){\r\n                            if(operateArr[maxDataIndex] < operateArr[j + 1]){\r\n                                maxDataIndex = j + 1\r\n                            }\r\n                        }\r\n                        this.swap(operateArr,i,maxDataIndex)\r\n                    }\r\n                    console.log(operateArr,'selectSort')\r\n                }\r\n                const insertSort = ()=>{\r\n                    const operateArr = this.getRandomArr(this.randomLen)\r\n                    for(let i = 1 ; i < this.randomLen ; i++){\r\n                        for(let j = i - 1;j >= 0; j--){\r\n                            if(operateArr[i] <= operateArr[j]){\r\n                                const insertVal = operateArr[i]\r\n                                operateArr.splice(i,1)\r\n                                operateArr.splice(j + 1,0,insertVal)\r\n                                break\r\n                            }else if(j === 0){\r\n                                const insertVal = operateArr[i]\r\n                                operateArr.splice(i,1)\r\n                                operateArr.splice(0,0,insertVal)\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log(operateArr,'insertSort')\r\n                }\r\n                const mergeSort = ()=>{\r\n                    // const operateArr = this.getRandomArr(this.randomLen)\r\n                    // //递归，拿一个数组进行除2，直到不能除为止\r\n                    // const merge = (i = 0,j = 0)=> {\r\n                    //     if(j === i){\r\n                    //         merge(j + 1,Math.random(j/2))\r\n                    //     }if(j - i === 1){\r\n                    //         if(arr[i] > arr[j]){\r\n                    //             this.swap(operateArr,i,j)\r\n                    //         }\r\n                    //     }else {\r\n                    //         merge(i,Math.random(j/2))\r\n                    //     }\r\n                    //     merge(0,this.randomLen - 1)\r\n                    // }\r\n                }\r\n                // 冒泡排序\r\n                bubbleSort()\r\n                // 优化算法，如果所有的数据都是排序好的，那我就不需要每一个进行对比了\r\n                bubbleSortV2()\r\n                //选择排序\r\n                selectSort()\r\n                //插入排序\r\n                insertSort()\r\n                // 归并排序\r\n                mergeSort()\r\n            }\r\n        },\r\n        computed: {},\r\n        created: function () {\r\n            this.appStart()\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .sortTest {\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sortTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sortTest.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./sortTest.vue?vue&type=template&id=f584487a&\"\nimport script from \"./sortTest.vue?vue&type=script&lang=js&\"\nexport * from \"./sortTest.vue?vue&type=script&lang=js&\"\nimport style0 from \"./sortTest.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}